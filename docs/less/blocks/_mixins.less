/* ---------- Mixins ---------- */
.font(@color: var(--white), @weight: 600, @text: uppercase) {
  color: @color;
  font-family: 'RF Rufo', sans-serif;
  font-weight: @weight;
  text-transform: @text;
}
// ----------

.font-arimo(@color: var(--text), @weight: 400, ) {
  color: @color;
  font-family: 'Arimo', Arial, sans-serif;
  font-weight: @weight;
}
// ----------

.input(@border-width: 1px; @border-color: #e2e5e8; @border-radius: 3px; @background-color: var(--white);) {
  border-width: @border-width;
  border-style: solid;
  border-color: @border-color;
  border-radius: @border-radius;
  background-color: @background-color;
}
// ----------

// box-shadow: 0 0 27px rgba(10, 54, 88, 0.1);
.box-shadow
  (@x: 0px, @y: 0px, @blur: 27px, @red: 10, @green: 54, @blue: 88, @alpha: 0.1) {
  box-shadow: @x @y @blur rgba(@red, @green, @blue, @alpha);
}
// ----------

.modal() {
  position: fixed;
  border-radius: 3px;
  overflow: hidden;
  background-color: var(--white);
  box-shadow: 0 0 27px rgba(10, 54, 88, 0.11);
  z-index: 20;
  // плавное появление окна
  opacity: 0;
  transition: 0.5s;

  @media (min-width: 1024px) {
    width: max-content;
    background-color: unset;
  }
}
// ----------

.form-wrap() {
  @media (min-width: 1024px) {
    padding: 64px 55px 30px;
    width: 535px;
    background-color: var(--background);
  }
}
// ----------

// .display: flex {  //  ???
//   display: flex; 
//   justify-content: space-between;
// }
// ----------

// .border {
//   border: 1px solid #e2e5e8;
// }
// ----------

// .border-radius (@radius: 5px) {
//   border-radius: @radius;
// }
// ----------

// .border-radius-custom (@topleft: 5px, @topright: 5px, @bottomleft: 5px, @bottomright: 5px) {
//   border-radius: @topleft @topright @bottomright @bottomleft;
// }
// Implementation:
// .border-radius-custom(20px, 20px, 0px, 0px);
// ----------

// .transition (@prop: all, @time: 1s, @ease: linear) {
//   transition: @prop @time @ease;
// }
// Implementation:
// .transition(all, 0.5s, ease-in);
// результат:
// .transition: all 0.5s ease-in;
// ----------

// .transform (@rotate: 90deg, @scale: 1, @skew: 1deg, @translate: 10px) {
//   transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
// }
// Implementation:
// .transform(5deg, 0.5, 1deg, 0px);
// результат:
// .transform: rotate(5deg) scale(0.5) skew(1deg) translate(0px);
// ----------

// простой линейный градиент: направление, начальный цвет и конечный цвет.

// .gradient (@origin: left, @start: #ffffff, @stop: #000000) {
//   background-color: @start;
//   background-image: linear-gradient(@origin, @start, @stop);
// }
// Implementation:
// .gradient(left, #663333, #333333);

// результат:
// background-color: #663333;
// background-image: linear-gradient(left, #663333, #333333);
// ----------

// фоновый градиент - применяется к блоку с любым фоновым цветом
// Когда нужно быстро создать градиент поверх фонового цвета элемента.
// Смысл: что начальным цветом этого градиента является прозрачный, а конечным – черный непрозрачный. Все это размещается поверх фона элемента. Нужно указать позицию от которой будет начинаться градиент и показатель полупрозрачности и получится фоновый градиент.

// .quick-gradient (@origin: left, @alpha: 0.2) {
//   background-image: linear-gradient(@origin, rgba(0,0,0,0.0), rgba(0,0,0,@alpha));
// }

// Implementation in div:
// div {
//   background-color: BADA55;
//   .quick-gradient(top, 0.2);
// }

// результат:
// background-color: BADA55;
// background-image: linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2));
// ----------

// ! Отражение (словно картинка в воде) - нужно в LESS-коде указать непрозрачность и высоту отражения.

// .reflect (@length: 50%, @opacity: 0.2){
//   -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(@length, transparent), to(rgba(255,255,255,@opacity)));
// }

// @base: #663333;
// @complement1: spin(@base, 180);
// @complement2: darken(spin(@base, 180), 5%);
// @lighten1: lighten(@base, 15%);
// @lighten2: lighten(@base, 30%);

// @base: #663333;
// @lighter1: lighten(spin(@base, 5), 10%);
// @lighter2: lighten(spin(@base, 10), 20%);
// @darker1: darken(spin(@base, -5), 10%);
// @darker2: darken(spin(@base, -10), 20%);

// Implementation:
// .reflect(20%, 0.2);

// результат:
// -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(20%, transparent), to(rgba(255, 255, 255, 0.2)));

/* colors */
// .one   {color: @base;}
// .two   {color: @complement1;}
// .three {color: @complement2;}
// .four  {color: @lighten1;}
// .five  {color: @lighten2;}

// /*colors 2*/
// .one   {color: @base;}
// .two   {color: @lighter1;}
// .three {color: @lighter2;}
// .four  {color: @darker1;}
// .five  {color: @darker2;}

// ----------

// .clearfix() {
//   &:before,
//   &:after {
//     display: table;
//     content: "";
//   }

//   &:after {
//     clear: both;
//   }
// }

// .navbar {
//   .clearfix();
// }
// ----------

// взаимодействие глобальных и локальных переменных внутри примеси, которых надо избегать:
// @global: 3;

// MIXIN
// .calc-mixin(@a: 1, @b: 2, @c: @global) {
//   @d: @a + @b + @c;
//   content: '@{d}';
// }

// .abcd {
//   border: solid 1px #333;
//   width: 100px;
//   padding: 10px;
//   text-align: center;

// &:after {
// Вызов MIXIN
// .calc-mixin();
//   }
// }
// ----------
